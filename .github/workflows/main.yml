name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-publish:

    runs-on: ubuntu-latest

    services:
      valkey:
        image: valkey/valkey:7.2-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build, Analyze, and Test
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
          VALKEY_HOST: valkey
        run: |
          echo "Waiting for Valkey service..."
          # --- START HEALTH CHECK ---
          count=0
          # Try connecting for up to 60 seconds (30 attempts * 2s sleep)
          until nc -z valkey 6379 || [ $count -eq 30 ]; do
            echo "Valkey not ready yet on port 6379, waiting... ($count/30)"
            sleep 2
            count=$((count+1))
          done
          
          # Check if the loop exited because the service is ready or because it timed out
          if ! nc -z valkey 6379; then
            echo "::error::Valkey service failed to become available on valkey:6379 after 60 seconds."
            exit 1
          fi
          echo "Valkey service is ready."
          # --- END HEALTH CHECK ---
          
          echo "Starting build and tests..."
          # Pass the host as a system property (still a good practice)
          ./gradlew build sonarqube -Dvalkey.host=valkey --info

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/dat250_expass:latest, ${{ vars.DOCKER_USERNAME }}/dat250_expass:${{ github.sha }}